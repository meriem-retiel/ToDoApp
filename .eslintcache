[{"C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\index.js":"1","C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\App.js":"2","C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\reportWebVitals.js":"3","C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\component\\Form.js":"4","C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\component\\TodoList.js":"5","C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\component\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1273,"mtime":1610708577972,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1701,"mtime":1610707809575,"results":"11","hashOfConfig":"8"},{"size":451,"mtime":1610657408501,"results":"12","hashOfConfig":"8"},{"size":1259,"mtime":1610707791532,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tnq9nc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\index.js",[],["29","30"],"C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\App.js",["31","32","33"],"C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\reportWebVitals.js",[],"C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\component\\Form.js",["34","35"],"import React , {useState} from \"react\"\r\nimport { IconButton, TextField, Select  , MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n \r\n  }));\r\n\r\nconst Form = (props) => {\r\n    \r\n    const classes = useStyles()\r\n\r\n    const submitTodoHandler = (e)=>{\r\n        e.preventDefault();\r\n        props.setTodo(\r\n            [...props.todo,{text:props.inputText , completed : false , id: Math.random() *1000} ]\r\n        )\r\n        props.setInputText(\"\")\r\n    }\r\n    const inputHandler = (e)=> {\r\n        props.setInputText(e.target.value)\r\n       \r\n    }\r\n    const completedHandler = (e)=> {\r\n        props.setCompleted(e.target.value)\r\n    }\r\n\r\n    const [inputForm, setInputForm] = useState(\"\");\r\n    return(\r\n        <form>\r\n        <TextField   value={props.inputText} clearButtonMode='always' id=\"standard-basic\" label=\"Nouvelle tache\" variant=\"standard\" onChange={inputHandler} />\r\n        <IconButton  onClick={submitTodoHandler}  >\r\n<AddCircleIcon color= 'primary' />\r\n        </IconButton>\r\n    \r\n        <Select\r\n          value={props.completed}\r\n          onChange={completedHandler}\r\n          displayEmpty\r\n        className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem value={'all'}>All</MenuItem>\r\n          <MenuItem value={'completed'}>Completed</MenuItem>\r\n          <MenuItem value={'uncompleted'}>Uncompleted</MenuItem>\r\n        </Select>\r\n          \r\n        </form>\r\n    )\r\n};\r\nexport default Form;","C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\component\\TodoList.js",[],"C:\\Users\\Retiel\\Desktop\\projet\\ToDoApp\\ToDoApp\\app\\src\\component\\Todo.js",["36","37"],"import React from \"react\"\r\nimport { Button, IconButton, Checkbox ,Grid ,List, ListItem,ListItemText ,ListItemSecondaryAction } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\n\r\nconst Todo = ({setFilterTodo,filterTodo,text,todo,setTodo,item})=>{\r\n\r\n    //handel events \r\n    const checkHandler = ()=>{\r\n        setTodo(todo.map((el)=>{\r\n        if(el.id=== item.id){\r\n            el.completed = true\r\n        }\r\n            return (el)\r\n        }\r\n        ));\r\n    \r\n    }\r\n    const deleteHandler = () =>{\r\n        setTodo(todo.filter((el)=>el.id !== item.id));\r\n    }\r\nreturn(\r\n <Grid >\r\n     <List>\r\n         <ListItem>\r\n             <ListItemText>\r\n                {text}\r\n             </ListItemText>\r\n             <ListItemSecondaryAction>\r\n             <IconButton onClick={checkHandler}>\r\n                    <CheckCircleIcon color= 'primary' />\r\n                 </IconButton>\r\n                 <IconButton onClick={deleteHandler}>\r\n                    <DeleteIcon  color= 'primary' />\r\n                 </IconButton>\r\n                \r\n             </ListItemSecondaryAction>\r\n         </ListItem>\r\n\r\n     </List>\r\n </Grid> \r\n)\r\n}\r\nexport default Todo",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":16,"column":32,"nodeType":"44","endLine":16,"endColumn":43,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"43","line":17,"column":32,"nodeType":"44","endLine":17,"endColumn":38,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":41,"column":72,"nodeType":"49","endLine":41,"endColumn":95},{"ruleId":"50","severity":1,"message":"51","line":35,"column":12,"nodeType":"52","messageId":"53","endLine":35,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":35,"column":23,"nodeType":"52","messageId":"53","endLine":35,"endColumn":35},{"ruleId":"50","severity":1,"message":"55","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":16},{"ruleId":"50","severity":1,"message":"56","line":2,"column":30,"nodeType":"52","messageId":"53","endLine":2,"endColumn":38},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["59"],["60"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'inputForm' is assigned a value but never used.","Identifier","unusedVar","'setInputForm' is assigned a value but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},"Update the dependencies array to be: [completed, filterHandler]",{"range":"65","text":"66"},"Update the dependencies array to be: [filterHandler, todo]",{"range":"67","text":"68"},[454,465],"[completed, filterHandler]",[499,505],"[filterHandler, todo]"]